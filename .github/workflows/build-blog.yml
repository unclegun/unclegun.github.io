name: Build and Deploy Blog

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install Pandoc
        run: sudo apt-get install -y pandoc
      
      - name: Convert Markdown to HTML
        run: |
          mkdir -p posts
          if compgen -G "blog-posts/*.md" > /dev/null; then
            for file in blog-posts/*.md; do
              filename=$(basename "$file" .md)
              title=$(grep '^#title ' "$file" | sed 's/#title //')
              date=$(grep '^#date ' "$file" | sed 's/#date //')
              excerpt=$(awk 'NR>2 && NR<=7' "$file" | tr '\n' ' ')
              pandoc "$file" -f markdown -t html -o "posts/$filename.html"
              echo "  {\"slug\": \"$filename\", \"title\": \"$title\", \"date\": \"$date\", \"excerpt\": \"$excerpt\"}" >> posts.json
            done
          else
            echo "<html><body><h1>No Blog Posts Found</h1></body></html>" > posts/index.html
          fi
      
      - name: Generate posts.json
        run: |
          echo "Checking blog posts directory..."
          ls -l blog-posts/
          echo '[' > posts.json
          first=true
          for file in blog-posts/*.md; do
            echo "Processing: $file"
            filename=$(basename "$file" .md)
            title=$(grep '^#title ' "$file" | sed 's/#title //')
            date=$(grep '^#date ' "$file" | sed 's/#date //')
            excerpt=$(awk 'NR>2 && NR<=7' "$file" | tr '\n' ' ')

            # Handle empty values
            if [ -z "$title" ] || [ -z "$date" ]; then
              echo "Skipping $file (Missing title or date)"
              continue
            fi

            if [ "$first" = true ]; then
              first=false
            else
              echo ',' >> posts.json
            fi
            echo "  {\"slug\": \"$filename\", \"title\": \"$title\", \"date\": \"$date\", \"excerpt\": \"$excerpt\"}" >> posts.json
          done
          echo ']' >> posts.json

          echo "Generated posts.json:"
          cat posts.json
          
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          if [ -d "posts" ] && [ "$(ls -A posts)" ]; then
            git add posts posts.json
            git commit -m "Auto-generate blog posts" || echo "No changes to commit"
            git push origin main
          else
            echo "No new blog posts to commit."
          fi